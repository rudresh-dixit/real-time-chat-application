{"ast":null,"code":"var _jsxFileName = \"/home/rudresh-dixit/Desktop/garbage/my-chat-app/src/components/Join/Join.js\";\n// Here we are going to use react hooks.\n// We can actually use state and lifecycle methods inside the \n// functional components.\n// useState is a hook to use state inside functional components.\nimport React, { useState } from 'react'; //link to our /chat path\n\nimport { Link } from 'react-router-dom'; // Prepare a specific css file for every component. \n\nimport './Join.css';\n\nfunction Join() {\n  // Declaring hooks. First parameter is a variable and second is a \n  // setter function. Inside useState we pass the initial value that \n  // the variable is going to have.\n  const [name, setName] = useState('');\n  const [group, setGroup] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joinOuterContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joinInnerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Join Group\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter Your Name...\",\n    className: \"joinInput\",\n    type: \"text\",\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter The Group...\",\n    className: \"joinInput mt-20\",\n    type: \"text\",\n    onChange: event => setGroup(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    onClick: event => !name || !group ? event.preventDefault() : null,\n    to: `/chat?name = ${name}&group = ${group}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button mt-20\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Log In\"))));\n}\n\nexport default Join;","map":{"version":3,"sources":["/home/rudresh-dixit/Desktop/garbage/my-chat-app/src/components/Join/Join.js"],"names":["React","useState","Link","Join","name","setName","group","setGroup","event","target","value","preventDefault"],"mappings":";AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEC;;AACD,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,GAAgB;AAEZ;AACA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAG,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,WAAW,EAAG,oBAArB;AAA0C,IAAA,SAAS,EAAG,WAAtD;AAAkE,IAAA,IAAI,EAAG,MAAzE;AAAgF,IAAA,QAAQ,EAAMO,KAAD,IAAWH,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,WAAW,EAAG,oBAArB;AAA0C,IAAA,SAAS,EAAG,iBAAtD;AAAwE,IAAA,IAAI,EAAG,MAA/E;AAAsF,IAAA,QAAQ,EAAMF,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CALJ,eAUI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAMF,KAAD,IAAW,CAACJ,IAAD,IAAS,CAACE,KAAV,GAAkBE,KAAK,CAACG,cAAN,EAAlB,GAA2C,IAAxE;AAA+E,IAAA,EAAE,EAAM,gBAAgBP,IAAM,YAAYE,KAAO,EAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,SAAS,EAAG,cAApB;AAAmC,IAAA,IAAI,EAAG,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAVJ,CADJ,CADJ;AAoBH;;AAED,eAAeH,IAAf","sourcesContent":["// Here we are going to use react hooks.\n// We can actually use state and lifecycle methods inside the \n// functional components.\n\n// useState is a hook to use state inside functional components.\nimport React, { useState } from 'react'\n\n //link to our /chat path\nimport { Link } from 'react-router-dom';\n\n// Prepare a specific css file for every component. \nimport './Join.css'; \n\nfunction Join() {\n\n    // Declaring hooks. First parameter is a variable and second is a \n    // setter function. Inside useState we pass the initial value that \n    // the variable is going to have.\n    const [name, setName] = useState('');\n    const [group, setGroup] = useState('');\n\n    return (\n        <div className = \"joinOuterContainer\">\n            <div className = \"joinInnerContainer\">\n                <h1 className = \"heading\">Join Group</h1>\n                {/* When someone is going to type somthing event is going to occur. */}\n                {/* And we can simply get the data by event.target.value */}\n                <div><input placeholder = \"Enter Your Name...\" className = \"joinInput\" type = \"text\" onChange = { (event) => setName(event.target.value) } /></div>\n                <div><input placeholder = \"Enter The Group...\" className = \"joinInput mt-20\" type = \"text\" onChange = { (event) => setGroup(event.target.value) } /></div>\n\n                {/* We are going to pass the data as an url. */}\n                {/* With this we will be able to read the name and the group from join component. */}\n                {/* We could have this by passing props or redux, but have not done it for the sake of simplicity. */}\n                <Link onClick = { (event) => !name || !group ? event.preventDefault() : null } to = { `/chat?name = ${ name }&group = ${ group }` }> \n\n                    {/* event.preventDefault() prevents the button click if data is not sufficient. */}\n                    <button className = \"button mt-20\" type = \"submit\">Log In</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Join\n"]},"metadata":{},"sourceType":"module"}